{
  "version": 3,
  "file": "bundle.css",
  "sources": [
    "App.svelte",
    "ClickGame.svelte",
    "Leaderboard.svelte"
  ],
  "sourcesContent": [
    "<script>\n  import { gameState, highscore, lastScore, username } from './store.js';\n  import ClickGame from './ClickGame.svelte';\n  import Leaderboard from './Leaderboard.svelte';\n</script>\n\n<svelte:head>\n  <title>Speed Clicker</title>\n</svelte:head>\n\n<main>\n  <h1>Speed Clicker</h1>\n  <div class=\"two-col\">\n    <div class=\"col\">\n      <div class=\"info\">\n        <div class=\"username-input\">\n          <label for=\"username\">Username</label>\n          <input\n            name=\"username\"\n            placeholder=\"Enter username...\"\n            disabled={$gameState}\n            bind:value={$username}\n          />\n        </div>\n        <span>Last score: {$lastScore ?? 'n/a'}</span>\n        <span>Highscore: {$highscore ?? 'n/a'}</span>\n      </div>\n      <ClickGame disabled={!$username} />\n    </div>\n    <div class=\"col\">\n      <Leaderboard />\n    </div>\n  </div>\n</main>\n\n<style>\n  .info {\n    display: flex;\n    flex-direction: column;\n    margin-bottom: 1rem;\n  }\n\n  .two-col {\n    display: flex;\n    flex-direction: row;\n    gap: 3rem;\n  }\n</style>\n",
    "<script>\n  import { createEventDispatcher } from 'svelte';\n  import { gameState, lastScore } from './store.js';\n  import ClickGamePlay from './ClickGamePlay.svelte';\n\n  export let disabled = false;\n\n  let clicked = false;\n\n  const GameState = {\n    START: 0,\n    PLAYING: 1,\n    FINISHED: 2\n  };\n\n  gameState.set(GameState.START);\n\n  const changeTo = state => () => {\n    if (clicked) return;\n    clicked = true;\n    setTimeout(() => {\n      clicked = false;\n      gameState.set(state);\n    }, 200);\n  };\n\n  const finishGame = score => {\n    lastScore.set(score);\n    disabled = true;\n    gameState.set(GameState.FINISHED);\n\n    // re-enable button after 1 s\n    setTimeout(() => disabled = false, 1000);\n  };\n</script>\n\n<div>\n  {#if $gameState == GameState.START}\n    <button {disabled} class:clicked on:click={changeTo(GameState.PLAYING)}>\n      Click to play\n    </button>\n  {:else if $gameState == GameState.PLAYING}\n    <ClickGamePlay on:finish={e => finishGame(e.detail.amountClicked)} />\n  {:else}\n    <div>\n      <button\n        class:clicked\n        {disabled}\n        on:click={changeTo(GameState.PLAYING)}\n      >\n        Play again\n      </button>\n    </div>\n  {/if}\n</div>\n\n<style>\n  div :global(button) {\n    width: 20rem;\n    height: 5rem;\n  }\n\n  button {\n    position: relative;\n    z-index: 1;\n  }\n\n  button::after {\n    content: '';\n    position: absolute;\n    top: 0;\n    left: 0;\n\n    /* Begin square moving animation */\n    width: 20rem;\n    height: 5rem;\n    background-color: #02b1f7;\n    /* End square moving animation */\n    \n    /*\n    width: 0;\n    height: 0;\n    border-top: 2.5rem solid transparent;\n    border-bottom: 2.5rem solid transparent;\n    border-left: 20rem solid #02b1f7;\n    */\n    z-index: -1;\n    transition: transform 200ms ease-in;\n    transform: scaleX(0);\n    transform-origin: right;\n  }\n\n  button:not([disabled]):hover::after {\n    transform: scaleX(1);\n    transform-origin: left;\n  }\n\n  button.clicked::after {\n    transform: scaleX(0) !important;\n    transform-origin: right !important;\n  }\n</style>\n",
    "<script>\n  import { leaderboard } from './store.js';\n</script>\n\n<table>\n  <tr>\n    <th>Place</th>\n    <th>Name</th>\n    <th>Score</th>\n    <th>Time</th>\n  </tr>\n  {#each $leaderboard.slice(0, 5) as entry, i}\n    <tr>\n      <td>{i + 1}</td>\n      <td>{entry.name}</td>\n      <td>{entry.score}</td>\n      <td>{new Date(entry.time).toLocaleString()}</td>\n    </tr>\n  {/each}\n</table>\n\n<style>\n  table, th, td {\n    border: 1px solid black;\n    border-collapse: collapse;\n    padding: .2rem;\n  }\n\n  th {\n    font-size: 1.5rem;\n  }\n</style>\n"
  ],
  "names": [],
  "mappings": "AAoCE,KAAK,cAAC,CAAC,AACL,OAAO,CAAE,IAAI,CACb,cAAc,CAAE,MAAM,CACtB,aAAa,CAAE,IAAI,AACrB,CAAC,AAED,QAAQ,cAAC,CAAC,AACR,OAAO,CAAE,IAAI,CACb,cAAc,CAAE,GAAG,CACnB,GAAG,CAAE,IAAI,AACX,CAAC;ACWD,kBAAG,CAAC,AAAQ,MAAM,AAAE,CAAC,AACnB,KAAK,CAAE,KAAK,CACZ,MAAM,CAAE,IAAI,AACd,CAAC,AAED,MAAM,eAAC,CAAC,AACN,QAAQ,CAAE,QAAQ,CAClB,OAAO,CAAE,CAAC,AACZ,CAAC,AAED,qBAAM,OAAO,AAAC,CAAC,AACb,OAAO,CAAE,EAAE,CACX,QAAQ,CAAE,QAAQ,CAClB,GAAG,CAAE,CAAC,CACN,IAAI,CAAE,CAAC,CAGP,KAAK,CAAE,KAAK,CACZ,MAAM,CAAE,IAAI,CACZ,gBAAgB,CAAE,OAAO,CAUzB,OAAO,CAAE,EAAE,CACX,UAAU,CAAE,SAAS,CAAC,KAAK,CAAC,OAAO,CACnC,SAAS,CAAE,OAAO,CAAC,CAAC,CACpB,gBAAgB,CAAE,KAAK,AACzB,CAAC,AAED,qBAAM,KAAK,CAAC,QAAQ,CAAC,CAAC,MAAM,OAAO,AAAC,CAAC,AACnC,SAAS,CAAE,OAAO,CAAC,CAAC,CACpB,gBAAgB,CAAE,IAAI,AACxB,CAAC,AAED,MAAM,uBAAQ,OAAO,AAAC,CAAC,AACrB,SAAS,CAAE,OAAO,CAAC,CAAC,CAAC,UAAU,CAC/B,gBAAgB,CAAE,KAAK,CAAC,UAAU,AACpC,CAAC;AC9ED,oBAAK,CAAE,iBAAE,CAAE,EAAE,eAAC,CAAC,AACb,MAAM,CAAE,GAAG,CAAC,KAAK,CAAC,KAAK,CACvB,eAAe,CAAE,QAAQ,CACzB,OAAO,CAAE,KAAK,AAChB,CAAC,AAED,EAAE,eAAC,CAAC,AACF,SAAS,CAAE,MAAM,AACnB,CAAC"
}